# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: vmdata.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Dict, List

import betterproto


class VMDataOpcode(betterproto.Enum):
    OP_CONSTANT = 0
    OP_NIL = 1
    OP_TRUE = 2
    OP_FALSE = 3
    OP_POP = 4
    OP_GET_LOCAL = 5
    OP_SET_LOCAL = 6
    OP_GET_GLOBAL = 7
    OP_DEFINE_GLOBAL = 8
    OP_SET_GLOBAL = 9
    OP_EQUAL = 10
    OP_GREATER = 11
    OP_LESS = 12
    OP_ADD = 13
    OP_SUBTRACT = 14
    OP_MULTIPLY = 15
    OP_DIVIDE = 16
    OP_NOT = 17
    OP_NEGATE = 18
    OP_PRINT = 19
    OP_JUMP = 20
    OP_JUMP_IF_FALSE = 21
    OP_LOOP = 22
    OP_RETURN = 23
    OP_PLACEHOLDER = 255


@dataclass
class VMData(betterproto.Message):
    instructions: List[int] = betterproto.int32_field(1)
    constant_vals: Dict[int, "ValueType"] = betterproto.map_field(
        2, betterproto.TYPE_INT64, betterproto.TYPE_MESSAGE
    )
    strings_at_addresses: Dict[str, "VMDataAddressAndHash"] = betterproto.map_field(
        3, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )


@dataclass
class VMDataAddressAndHash(betterproto.Message):
    address: int = betterproto.int64_field(1)
    hash: int = betterproto.int32_field(2)


@dataclass
class ValueType(betterproto.Message):
    object_address: int = betterproto.int64_field(1, group="ValueTypes")
    num_val: float = betterproto.double_field(2, group="ValueTypes")
    bool_val: bool = betterproto.bool_field(4, group="ValueTypes")
